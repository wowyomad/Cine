#pragma once
#include "glash/glash_pch.hpp"

namespace glash
{
	using Color = glm::vec4;
	namespace color {
		constexpr Color RED = Color(255, 0, 0, 0);
		constexpr Color GREEN = Color(0, 255, 0, 0);
		constexpr Color BLUE = Color(0, 0, 255, 0);
	}

	enum GLTarget
	{
		ARRAY_BUFFER = GL_ARRAY_BUFFER,
		ARRAY_ELEMENT = GL_ELEMENT_ARRAY_BUFFER,
	};

	enum GLBufferUsage
	{
		STREAM_DRAW = GL_STREAM_DRAW,
		STREAM_READ = GL_STREAM_READ,
		STREAM_COPY = GL_STREAM_COPY,
		STATIC_DRAW = GL_STATIC_DRAW,
		STATIC_READ = GL_STATIC_READ,
		STATIC_COPY = GL_STATIC_COPY,
		DYNAMIC_DRAW = GL_DYNAMIC_DRAW,
		DYNAMIC_READ = GL_DYNAMIC_READ,
		DYNAMIC_COPY = GL_DYNAMIC_COPY
	};

	enum GLStatus
	{
		SHADER_COMPILE = GL_COMPILE_STATUS,
		SHADER_INFO_LOG_LENGTH = GL_INFO_LOG_LENGTH,
		SHADER_SOURCE_LENGTH = GL_SHADER_SOURCE_LENGTH,
		SHADER_TYPE = GL_SHADER_TYPE,
		PROGRAM_LINK = GL_LINK_STATUS,
		PROGRAM_VALIDATE = GL_VALIDATE_STATUS,
		PROGRAM_INFO_LOG_LENGTH = GL_INFO_LOG_LENGTH,
		PROGRAM_ATTACHED_SHADERS = GL_ATTACHED_SHADERS,
		PROGRAM_ACTIVE_UNIFORMS = GL_ACTIVE_UNIFORMS,
		PROGRAM_ACTIVE_ATTRIBUTES = GL_ACTIVE_ATTRIBUTES

	};
}